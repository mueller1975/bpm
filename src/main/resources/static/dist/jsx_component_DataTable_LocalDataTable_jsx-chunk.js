"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbpm"] = self["webpackChunkbpm"] || []).push([["jsx_component_DataTable_LocalDataTable_jsx"],{

/***/ "./jsx/component/DataTable/LocalDataTable.jsx":
/*!****************************************************!*\
  !*** ./jsx/component/DataTable/LocalDataTable.jsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _DataTableX_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataTableX.jsx */ \"./jsx/component/DataTable/DataTableX.jsx\");\n\n\n\nconst EMPTY_DATA = {\n  total: 0,\n  rows: []\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef((props, ref) => {\n  const {\n    data = {\n      total: 0,\n      rows: []\n    },\n    dataError,\n    loading = false,\n    onDataChange,\n    options,\n    filter,\n    filterParams,\n    actionButtons,\n    storageKey,\n    rowKey,\n    enableKeywordSearch = false,\n    showCheckbox = false,\n    resizable = false,\n    alignDetailToRight = true,\n    innerTable = false,\n    roundCorner = false,\n    onClickRow,\n    onDoubleClickRow,\n    onSelectRow\n  } = props;\n  const {\n    columns,\n    title,\n    params,\n    page = 0,\n    pageSize,\n    sizeOptions,\n    sortProp,\n    sortOrder\n  } = options;\n  const [tableData, setTableData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(data);\n  const [pageData, setPageData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    ...EMPTY_DATA\n  });\n  const [exporting, setExporting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [queryParams, setQueryParams] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const tableRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n\n  /* expose functions to parent component */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => ({\n    deleteRows // 重新載入表格資料\n  }));\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setTableData(data);\n  }, [data]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (queryParams) {\n      const {\n        pagination,\n        sorting,\n        searchKeyword,\n        filterOn\n      } = queryParams;\n      if (pagination) {\n        const {\n          page,\n          size\n        } = pagination;\n        let start = page * size;\n        let end = start + size - 1;\n        console.log({\n          start,\n          end\n        });\n        let rows = tableData.rows.slice(start, end);\n        setPageData({\n          total: tableData.total,\n          rows\n        });\n      }\n    }\n  }, [tableData, queryParams]);\n\n  // 在 DataTable 操作會觸發更新資料的 UI 動作\n  const tableQueryHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(tableParams => setQueryParams(tableParams), []);\n\n  // 刪除列\n  const deleteRows = () => {\n    let selectedRows = tableRef.current.getSelectedRows();\n    let selectedRowIds = selectedRows.map(row => row[rowKey]);\n    console.log({\n      selectedRowIds\n    });\n    return new Promise((resolve, reject) => {\n      let rows = tableData.rows.filter(row => !selectedRowIds.includes(row[rowKey]));\n      console.log({\n        rows\n      });\n      onDataChange({\n        total: rows.length,\n        rows\n      });\n      resolve(`已刪除 ${selectedRows.length} 筆資料！`);\n    });\n  };\n  const exportHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {}, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DataTableX_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    ref: tableRef,\n    title: title,\n    columns: columns,\n    data: pageData,\n    dataError: dataError,\n    sortProp: sortProp,\n    sortOrder: sortOrder,\n    page: page,\n    pageSize: pageSize,\n    sizeOptions: sizeOptions,\n    filter: filter,\n    filterParams: filterParams,\n    processing: loading || exporting,\n    actionButtons: actionButtons,\n    storageKey: storageKey,\n    enableKeywordSearch: enableKeywordSearch,\n    showCheckbox: showCheckbox,\n    resizable: resizable,\n    alignDetailToRight: alignDetailToRight,\n    innerTable: innerTable,\n    roundCorner: roundCorner,\n    onClickRow: onClickRow,\n    onDoubleClickRow: onDoubleClickRow,\n    onSelectRow: onSelectRow,\n    onQuery: tableQueryHandler,\n    onExport: exportHandler\n  });\n})));\n\n//# sourceURL=webpack://bpm/./jsx/component/DataTable/LocalDataTable.jsx?");

/***/ })

}]);